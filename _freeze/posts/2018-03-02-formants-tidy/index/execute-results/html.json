{
  "hash": "0f5d0f3ca39ab7b5a3deb5067b5eb43e",
  "result": {
    "markdown": "---\ntitle: Vowel formants trajectories and tidy data\nauthor: Stefano Coretta\ndate: '2018-03-02'\n\ncategories:\n  - Linguistics\ntags:\n  - rstats\n  - tidy data\n  - phonetics\n  - phonology\n  - linguistics\n  - data processing\n  - time series\n  - formants\n  - formant trajectories\n  - ggplot2\nbibliography: /Users/ste/texmf/bibtex/bib/linguistics.bib\ncls: unified-style-sheet-for-linguistics.csl\n---\n\n\n\n\nWith the advent of more powerful statistical methods for assessing time series data, it is now becoming more common to compare whole vowel formant trajectories rather then just using average values.\n\nIn this post I will show how to tidy a formant measurements dataset and plot formants using the tidyverse [@wickham2017].\n\n# From wide to long\n\nTo illustrate the process, I will use formant data that was kindly provided by [Stephen Nichols](http://tiny.cc/sjn).\n\nLet's first read in the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrajectories <- read_csv(\"./data/nichols-2018/tulemupepelako.csv\")\n\ntrajectories\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 61\n   Time Vowel Word      Duration F1_05 F1_10 F1_15 F1_20 F1_25 F1_30 F1_35 F1_40\n  <dbl> <chr> <chr>        <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1  194. u     tulemupe…     43.3  406.  439.  453.  456.  430.  357.  314.  288.\n2  194. e     tulemupe…    103.   503.  517.  537.  564.  556.  362.  315.  295.\n3  194. u     tulemupe…     14.1  290.  288.  286.  283.  281.  281.  282.  295.\n4  194. e     tulemupe…     75.7  440.  441.  439.  429.  386.  269.  250.  318.\n5  194. e     tulemupe…     68.2  437.  445.  479.  562.  622.  605.  523.  618.\n6  195. a     tulemupe…     89.8  800.  736.  662.  543.  447.  564.  768.  358.\n7  195. o     tulemupe…     98.5  482.  463.  471.  326.  316.  573. 1511. 1389.\n# ℹ 49 more variables: F1_45 <dbl>, F1_50 <dbl>, F1_55 <dbl>, F1_60 <dbl>,\n#   F1_65 <dbl>, F1_70 <dbl>, F1_75 <dbl>, F1_80 <dbl>, F1_85 <dbl>,\n#   F1_90 <dbl>, F1_95 <dbl>, F2_05 <dbl>, F2_10 <dbl>, F2_15 <dbl>,\n#   F2_20 <dbl>, F2_25 <dbl>, F2_30 <dbl>, F2_35 <dbl>, F2_40 <dbl>,\n#   F2_45 <dbl>, F2_50 <dbl>, F2_55 <dbl>, F2_60 <dbl>, F2_65 <dbl>,\n#   F2_70 <dbl>, F2_75 <dbl>, F2_80 <dbl>, F2_85 <dbl>, F2_90 <dbl>,\n#   F2_95 <dbl>, F3_05 <dbl>, F3_10 <dbl>, F3_15 <dbl>, F3_20 <dbl>, …\n```\n:::\n:::\n\n\nThe dataset contains formant values of F1-F3 at 5% intervals for the vowels in the word *tulemupepelako* 'we are praying for her' (Bemba, [`bemb1257`]).\n\nIn the first step, we will create two columns, one with the formant/interval label and one with the formant value, using `pivot_longer()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrajectories_long <- pivot_longer(\n  trajectories,\n  F1_05:F3_95,\n  names_to = \"formant_int\",\n  values_to = \"value\")\n\ntrajectories_long\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 399 × 6\n    Time Vowel Word           Duration formant_int value\n   <dbl> <chr> <chr>             <dbl> <chr>       <dbl>\n 1  194. u     tulemupepelako     43.3 F1_05        406.\n 2  194. u     tulemupepelako     43.3 F1_10        439.\n 3  194. u     tulemupepelako     43.3 F1_15        453.\n 4  194. u     tulemupepelako     43.3 F1_20        456.\n 5  194. u     tulemupepelako     43.3 F1_25        430.\n 6  194. u     tulemupepelako     43.3 F1_30        357.\n 7  194. u     tulemupepelako     43.3 F1_35        314.\n 8  194. u     tulemupepelako     43.3 F1_40        288.\n 9  194. u     tulemupepelako     43.3 F1_45        286.\n10  194. u     tulemupepelako     43.3 F1_50        327.\n# ℹ 389 more rows\n```\n:::\n:::\n\n\nThe next step is to separate the `formant_int` column into two columns: one for `formant`, and one for `interval`.\nThe argument `convert = TRUE` ensures that the `interval` column is converted into a numeric column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrajectories_sep <- separate(\n  trajectories_long,\n  formant_int,\n  c(\"formant\", \"interval\"),\n  convert = TRUE\n)\n\ntrajectories_sep\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 399 × 7\n    Time Vowel Word           Duration formant interval value\n   <dbl> <chr> <chr>             <dbl> <chr>      <int> <dbl>\n 1  194. u     tulemupepelako     43.3 F1             5  406.\n 2  194. u     tulemupepelako     43.3 F1            10  439.\n 3  194. u     tulemupepelako     43.3 F1            15  453.\n 4  194. u     tulemupepelako     43.3 F1            20  456.\n 5  194. u     tulemupepelako     43.3 F1            25  430.\n 6  194. u     tulemupepelako     43.3 F1            30  357.\n 7  194. u     tulemupepelako     43.3 F1            35  314.\n 8  194. u     tulemupepelako     43.3 F1            40  288.\n 9  194. u     tulemupepelako     43.3 F1            45  286.\n10  194. u     tulemupepelako     43.3 F1            50  327.\n# ℹ 389 more rows\n```\n:::\n:::\n\n\nNow we can put back the formant labels into one column each.\nWe can achieve this with `pivot_wider()`, the counterpart of `pivo_longer()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrajectories_wide <- pivot_wider(\n  trajectories_sep,\n  names_from = formant,\n  values_from = value\n)\n\ntrajectories_wide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 133 × 8\n    Time Vowel Word           Duration interval    F1    F2    F3\n   <dbl> <chr> <chr>             <dbl>    <int> <dbl> <dbl> <dbl>\n 1  194. u     tulemupepelako     43.3        5  406. 1205. 2626.\n 2  194. u     tulemupepelako     43.3       10  439. 1226. 2556.\n 3  194. u     tulemupepelako     43.3       15  453. 1246. 2507.\n 4  194. u     tulemupepelako     43.3       20  456. 1291. 2451.\n 5  194. u     tulemupepelako     43.3       25  430. 1418. 2331.\n 6  194. u     tulemupepelako     43.3       30  357. 1555. 2268.\n 7  194. u     tulemupepelako     43.3       35  314. 1603. 2335.\n 8  194. u     tulemupepelako     43.3       40  288. 1709. 2437.\n 9  194. u     tulemupepelako     43.3       45  286. 1712. 2461.\n10  194. u     tulemupepelako     43.3       50  327. 1747. 2470.\n# ℹ 123 more rows\n```\n:::\n:::\n\n\nWe now have a dataset with separate columns for each formant and individual rows for each vowel interval.\n\n## The pipe\n\nAll the individual steps above can be chained by using the pipe `%>%`.\nWhat the pipe does is simply \"transferring\" the output of the function before it as the input of the function after it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrajectories <- trajectories %>%\n  pivot_longer(F1_05:F3_95, names_to = \"formant_int\", values_to = \"value\") %>%\n  separate(formant_int, c(\"formant\", \"interval\"), convert = TRUE) %>%\n  pivot_wider(names_from = formant, values_from = value)\n```\n:::\n\n\n# Plot\n\nWe can finally plot the formant trajectories.\n\n\n::: {.cell hash='index_cache/html/trajectory-plot_e1d0906cd64f7add2d841488aad0fe27'}\n\n```{.r .cell-code}\ntrajectories %>%\n  ggplot(aes(x = interval)) +\n  geom_smooth(aes(y = F1), method = \"gam\", se = FALSE, colour = \"#A7473A\") +\n  geom_smooth(aes(y = F2), method = \"gam\", se = FALSE, colour = \"#4B5F6C\") +\n  geom_smooth(aes(y = F3), method = \"gam\", se = FALSE, colour = \"#B09B37\") +\n  facet_wrap(~ Vowel) +\n  ylab(\"Hertz\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/trajectory-plot-1.png){width=672}\n:::\n:::\n\n\n## References\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}