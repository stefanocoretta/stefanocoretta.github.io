{
  "hash": "9b6743adf6a05aa5a748235ba3ecd768",
  "result": {
    "markdown": "---\ntitle: How to globally set colour scales in ggplot2\nauthor: Stefano Coretta\ndate: '2020-12-22'\n\ncategories:\n  - Methods\ntags:\n  - data viz\n  - ggplot2\n  - colours\n  - rmd\n  - rmarkdown\n---\n\n\n\n\nAfter the post on using custom typefaces in ggplot2 ([here](../custom-fonts-ggplot2)), this time I'll briefly discuss how to set colour scales in ggplot2 globally in an `.Rmd` file.\n\nThe perk of setting scales globally is that you can set the colours once at the beginning of the `.Rmd` file and all the plots in the file will adhere to the specified scales without the need to repeat code.\n\n# Set ggplot2 options\n\nThe most robust way of specifying global colour scales for ggplot2 plots is to set the appropriate ggplot2 options with `options()` at the beginning of the `.Rmd` file.\nI generally do so in the `setup` chunk, where I also load the tidyverse/ggplot2 with `library(tidyverse)`.\n\nThe relevant options are:\n\n- `ggplot2.discrete.colour`: sets the colour scale for discrete aesthetics.\n- `ggplot2.discrete.fill`: sets the fill scale for discrete aesthetics.\n- `ggplot2.continuous.colour`: sets the colour scale for continuous aesthetics.\n- `ggplot2.continuous.fill`: sets the fill scale for continuous aesthetics.\n\nAll these options take a character vector of colour names/codes or a function that returns such a vector (for the full documentation see [here](https://ggplot2.tidyverse.org/reference/scale_colour_discrete.html?q=discrete%20colour%20scales) and [here](https://ggplot2.tidyverse.org/reference/scale_colour_continuous.html)).\n\nFor example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# names\noptions(ggplot2.discrete.fill = c(\"red\", \"blue\", \"green\", \"purple\", \"yellow\"))\n\n# hex codes\noptions(ggplot2.discrete.fill = c(\"#264653\", \"#2a9d8f\", \"#a8dadc\", \"#457b9d\", \"#e76f51\"))\n\n# function\noptions(ggplot2.discrete.fill = RColorBrewer::brewer.pal(12, \"Set3\"))\n```\n:::\n\n\nNote that the colours specified with `ggplot2.discrete.*` will be used only if there are as many colours in the vector/function output as the number of data levels, or more.\nWhen the number of level exceeds the number of colours, ggplot2 falls back to `scale_colour_hue()/scale_fill_hue()` to construct the scale.\n\nIt is possible to define multiple palettes each with a different number of colours as a list of colour names/codes vectors, and ggplot2 will pick the palette with the minimum number of colours that exceeds the number of data levels.\nSee \\@ref(interp) and the third example [here](https://ggplot2.tidyverse.org/reference/scale_colour_discrete.html).\n\n# Colours in action\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # or library(ggplot2)\n```\n:::\n\n\n## Colour name\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(ggplot2.discrete.fill = c(\"red\", \"blue\", \"green\", \"purple\", \"yellow\"))\n\nmpg %>%\n  filter(!(class %in% c(\"subcompact\", \"suv\"))) %>%\n  ggplot(aes(class, fill = class)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/name-1.png){width=672}\n:::\n:::\n\n\n## Hex value\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(ggplot2.discrete.fill = c(\"#264653\", \"#2a9d8f\", \"#a8dadc\", \"#457b9d\", \"#e76f51\"))\n\nmpg %>%\n  filter(!(class %in% c(\"subcompact\", \"suv\"))) %>%\n  ggplot(aes(class, fill = class)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/hex-1.png){width=672}\n:::\n:::\n\n\n## Set3\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(ggplot2.discrete.fill = RColorBrewer::brewer.pal(12, \"Set3\"))\n\nmpg %>%\n  filter(!(class %in% c(\"subcompact\", \"suv\"))) %>%\n  ggplot(aes(class, fill = class)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/set3-1.png){width=672}\n:::\n:::\n\n\n## Palette interpolation {#interp}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndefault_palettes <- list(\n  # palette with 5 colours\n  wesanderson::wes_palette(\"Darjeeling1\"),\n  # same palette interpolated to 8 colours\n  grDevices::colorRampPalette(wesanderson::wes_palette(\"Darjeeling1\"), alpha = TRUE)(8)\n)\n\noptions(ggplot2.discrete.fill = default_palettes)\n\n# 5 levels\nggplot(mpg, aes(class, fill = fl)) + geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/ramp-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 7 levels\nggplot(mpg, aes(class, fill = class)) + geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/ramp-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}