<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linear models on Stefano Coretta</title>
    <link>https://stefanocoretta.github.io/categories/linear-models/</link>
    <description>Recent content in Linear models on Stefano Coretta</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Fri, 22 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://stefanocoretta.github.io/categories/linear-models/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>One Thousand and One names</title>
      <link>https://stefanocoretta.github.io/post/2022-07-22-one-thousand-and-one-names/</link>
      <pubDate>Fri, 22 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://stefanocoretta.github.io/post/2022-07-22-one-thousand-and-one-names/</guid>
      <description>The following table lists common “portmanteau” names for linear models. Note that different traditions/disciplines might use one particular name more often than the others.
My usual recommendation is to move away from using specific names like “logistic regression” or “mixed-effects models” and instead just specify what kind of components your linear model has (see the Description column in the table).
Formula Description Names lm(y ~ x) Linear model with one predictor x using a Gaussian distribution for the outcome variable y simple linear regression, simple linear model lm(y ~ x + z + .</description>
    </item>
    
    <item>
      <title>How to simplify your study design</title>
      <link>https://stefanocoretta.github.io/post/2021-12-01-how-to-simplify-your-study-design/</link>
      <pubDate>Wed, 01 Dec 2021 17:38:53 +0000</pubDate>
      
      <guid>https://stefanocoretta.github.io/post/2021-12-01-how-to-simplify-your-study-design/</guid>
      <description>Content Warning: there are A LOT of gifs in this post
We have all been there.
We have run a study with a thoroughly thought-out research design. We got participants from the selected target population. Each participant has gone through the tasks of the study, to gather data from several crossing conditions and now the time has come for you to run (the analysis) FOR. YOUR. LIFE.
And then THE HORROR.</description>
    </item>
    
    <item>
      <title>Linear models: a cheat-sheet</title>
      <link>https://stefanocoretta.github.io/post/2021-08-21-regression-models-a-cheat-sheet/</link>
      <pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://stefanocoretta.github.io/post/2021-08-21-regression-models-a-cheat-sheet/</guid>
      <description>One model to rule them all Linear models, aka linear regression models or regression models, are a group of statistical models based on the simple idea that we can predict an outcome variable \(Y\) based on a function \(f(X)\).
The “simplest” linear model is the formula of a line:1
\[ y = \alpha + \beta x \]
where \(\alpha\) is the intercept of the line and \(\beta\) the slope.</description>
    </item>
    
    <item>
      <title>Factors, coding and contrasts</title>
      <link>https://stefanocoretta.github.io/post/contrasts/</link>
      <pubDate>Tue, 20 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://stefanocoretta.github.io/post/contrasts/</guid>
      <description>This post is an overview of how factors (i.e. categorical variables) are coded under the hood and which types of coding can be set in R.1
Introduction There’s seems to be a bit of terminological mix-up in the wild, so we first present a terminological set that will be used throughout the vignette.
Categorical variables in R are generally stored using factors. A factor is a vector of values from a categorical variable.</description>
    </item>
    
    <item>
      <title>On random effects</title>
      <link>https://stefanocoretta.github.io/post/2021-03-15-on-random-effects/</link>
      <pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://stefanocoretta.github.io/post/2021-03-15-on-random-effects/</guid>
      <description>If you use mixed-effects models (aka multilevel models, hierarchical models), I am sure that at some point you asked yourself the following question at least once: Should I include variable X as a fixed or as a random effect?
To answer this question we need to ask first: what is a random effect?
Regrettably, there is no straightforward answer (disappointed, uh?).
The main reason is that, in fact, there are many possible (and most times mutually exclusive) definitions of what a random (vs fixed) effect is.</description>
    </item>
    
    <item>
      <title>Plotting prior distributions with ggplot2</title>
      <link>https://stefanocoretta.github.io/post/priors-ggplot2/</link>
      <pubDate>Mon, 17 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://stefanocoretta.github.io/post/priors-ggplot2/</guid>
      <description>The choice of priors is a fundamental step of the Bayesian inference process. Vasishth et al. (2018) recommend plotting the chosen priors to see if they are reasonable.
In this post I will show how to easily plot prior distributions in ggplot2 (which is part of the tidyverse).
Let’s load the tidyverse first.
library(tidyverse) ## ── Attaching packages ─────────────────────────────────────────────────────────────────────────────── tidyverse 1.3.1 ── ## ✔ ggplot2 3.3.5 ✔ purrr 0.3.4 ## ✔ tibble 3.</description>
    </item>
    
  </channel>
</rss>
